swagger: "2.0"
info:
  description: "User Want to Apply for a new mobile connection with XYZ company"
  version: "1.0.0"
  title: "New Mobile Connection"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v1"
tags:
- name: "List of Request"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find all Request"
    url: "http://swagger.io"
- name: "Details of Request"
  description: "View all Requests"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
 /requests:
    get:
      tags:
      - "request"
      summary: "Find requestID bu user details"
      description: "Multiple request status can seen strings"
      operationId: "listOfRequestDetails"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "requestId"
        in: "query"
        description: "Request Id "
        required: true
        type: "array"
        items:
          type: "string"
      - name: "requestStatus"
        in: "query"
        description: "Request Status "
        required: true
        type: "array"
        items:
          type: "string"
      responses:
        "200":
          description: "Request Id details"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/requestId"
        "400":
          description: "Invalid RequestId value"
      security:
      - adminUser_auth:
        - "write:requestId"
        - "read:requestId"
  /listOfRequest:
    get:
      tags:
      - "pet"
      summary: "Get the List of Re"
      description: "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
      operationId: "findPetsByTags"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
        "400":
          description: "Invalid tag value"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
      deprecated: true

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"